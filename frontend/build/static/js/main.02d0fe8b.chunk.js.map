{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userContants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","actions/userActions.js","components/SearchBox.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","components/Paginate.js","actions/productActions.js","components/ProductCarousel.js","components/Meta.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderDeliver","orderListMy","orders","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","message","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","className","Control","name","onChange","target","value","placeholder","Button","variant","Header","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","Row","Col","Rating","text","color","style","defaultProps","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Message","children","Alert","Loader","Spinner","animation","role","width","height","margin","display","Paginate","Pagination","Array","keys","active","listProducts","pageNumber","listProductDetails","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","Meta","description","keywords","Helmet","content","HomeScreen","match","params","sm","md","lg","xl","ProductScreen","qty","setQty","setRating","comment","setComment","errorProductReview","successProductReview","alert","ListGroup","countInStock","disabled","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","location","search","Number","split","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","confirmPassword","setConfirmPassword","setName","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","autoComplete","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","window","paypal","href","amount","onSuccess","paymentResult","console","log","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","App","path","component","exact","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.02d0fe8b.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST';\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS';\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL';\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST';\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS';\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL';\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST';\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS';\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL';\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST';\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS';\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL';\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET';\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST';\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS';\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL';\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET';\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST';\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS';\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL';\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET';\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST';\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS';\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL';","export const CART_ADD_ITEM = 'CART_ADD_ITEM';\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM';\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS';\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD';\r\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST';\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL';\r\nexport const USER_LOGOUT = 'USER_LOGOUT';\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST';\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS';\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL';\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST';\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS';\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL';\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET';\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST';\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS';\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL';\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET';\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST';\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS';\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL';\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET';\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST';\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS';\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL';\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST';\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS';\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL';\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET';","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST';\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS';\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL';\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST';\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS';\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL';\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST';\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS';\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL';\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET';\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST';\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS';\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL';\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET';\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST';\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS';\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL';\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST';\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS';\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL';\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET';\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer, productReviewCreateReducer, productTopRatedReducer } from './reducers/productReducers';\r\nimport { cartReducer } from './reducers/cartReducers';\r\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from './reducers/userReducers';\r\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer, orderListReducer, orderDeliverReducer } from './reducers/orderReducers';\r\n// combineReducers is to be used to combine all reducers into a single thing that can be passed to the store\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    productTopRated: productTopRatedReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer\r\n});\r\n\r\n// grab the cart items from local storage\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\r\n\r\nconst initialState = {\r\n    cart: { cartItems: cartItemsFromStorage, shippingAddress: shippingAddressFromStorage },\r\n    userLogin: { userInfo: userInfoFromStorage }\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\n// this is where you create a store that can be passed into a Provider\r\n// apply middleware is to apply thunk\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\r\n\r\nexport default store;","import { PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAIL, PRODUCT_CREATE_RESET, PRODUCT_CREATE_FAIL, PRODUCT_CREATE_SUCCESS, PRODUCT_CREATE_REQUEST, PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS, PRODUCT_UPDATE_FAIL, PRODUCT_UPDATE_RESET, PRODUCT_CREATE_REVIEW_REQUEST, PRODUCT_CREATE_REVIEW_SUCCESS, PRODUCT_CREATE_REVIEW_FAIL, PRODUCT_CREATE_REVIEW_RESET, PRODUCT_TOP_REQUEST, PRODUCT_TOP_SUCCESS, PRODUCT_TOP_FAIL } from '../constants/productConstants';\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading: true, products: [] };\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return { loading: false, products: action.payload.products, pages: action.payload.pages, page: action.payload.page };\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const productDetailsReducer = (state = { product: { reviews: [] } }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return { loading: true, ...state };\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { loading: false, product: action.payload };\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return { loading: true };\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return { loading: false, success: true };\r\n        case PRODUCT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return { loading: true };\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload };\r\n        case PRODUCT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case PRODUCT_CREATE_RESET:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return { loading: true };\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload };\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case PRODUCT_UPDATE_RESET:\r\n            return { product: {} };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { loading: true };\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true };\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_TOP_REQUEST:\r\n            return { loading: true, products: [] };\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return { loading: false, products: action.payload };\r\n        case PRODUCT_TOP_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD } from '../constants/cartConstants';\r\n\r\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload;\r\n\r\n            // look for product that has same product id => because product field is just the id\r\n            const existItem = state.cartItems.find(x => x.product === item.product);\r\n\r\n            if (existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\r\n                };\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                };\r\n            }\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\r\n            };\r\n\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload\r\n            };\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","import { USER_DELETE_FAIL, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_RESET, USER_DETAILS_SUCCESS, USER_LIST_FAIL, USER_LIST_REQUEST, USER_LIST_RESET, USER_LIST_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_FAIL, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_RESET, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_REQUEST, USER_UPDATE_RESET, USER_UPDATE_SUCCESS } from \"../constants/userContants\";\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true };\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload };\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case USER_LOGOUT:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true };\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload };\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true };\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload };\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case USER_DETAILS_RESET:\r\n            return { user: {} };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { loading: true };\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, success: true, userInfo: action.payload };\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n    switch (action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return { loading: true };\r\n        case USER_LIST_SUCCESS:\r\n            return { loading: false, users: action.payload };\r\n        case USER_LIST_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case USER_LIST_RESET:\r\n            return { users: [] };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return { loading: true };\r\n        case USER_DELETE_SUCCESS:\r\n            return { loading: false, success: true };\r\n        case USER_DELETE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading: true };\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, success: true };\r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case USER_UPDATE_RESET:\r\n            return { user: {} };\r\n        default:\r\n            return state;\r\n    }\r\n};","import { ORDER_CREATE_FAIL, ORDER_CREATE_SUCCESS, ORDER_CREATE_REQUEST, ORDER_DETAILS_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAIL, ORDER_PAY_RESET, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_LIST_MY_FAIL, ORDER_LIST_MY_RESET, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_LIST_FAIL, ORDER_DELIVER_REQUEST, ORDER_DELIVER_SUCCESS, ORDER_DELIVER_FAIL, ORDER_DELIVER_RESET } from '../constants/orderConstants';\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true\r\n            };\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            };\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const orderDetailsReducer = (state = { loading: true, orderItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            };\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n            };\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            };\r\n        case ORDER_PAY_RESET:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DELIVER_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n            };\r\n        case ORDER_DELIVER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            };\r\n        case ORDER_DELIVER_RESET:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n                loading: true\r\n            };\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload,\r\n            };\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            };\r\n        case ORDER_LIST_MY_RESET:\r\n            return {\r\n                orders: []\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_REQUEST:\r\n            return {\r\n                loading: true\r\n            };\r\n        case ORDER_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload,\r\n            };\r\n        case ORDER_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","import axios from 'axios';\r\nimport { USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_DETAILS_RESET, USER_LIST_FAIL, USER_LIST_SUCCESS, USER_LIST_REQUEST, USER_LIST_RESET, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DELETE_FAIL, USER_UPDATE_SUCCESS, USER_UPDATE_REQUEST, USER_UPDATE_FAIL } from \"../constants/userContants\";\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants';\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        });\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n\r\n        const { data } = await axios.post('/api/users/login', { email, password }, config);\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        });\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo');\r\n    dispatch({ type: USER_LOGOUT });\r\n    dispatch({ type: USER_DETAILS_RESET });\r\n    dispatch({ type: ORDER_LIST_MY_RESET });\r\n    dispatch({ type: USER_LIST_RESET });\r\n};\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        });\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n\r\n        const { data } = await axios.post('/api/users', { name, email, password }, config);\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        });\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        });\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n};\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        });\r\n\r\n        const { userLogin: { userInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        };\r\n\r\n        const { data } = await axios.get(`/api/users/${id}`, config);\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n};\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        });\r\n\r\n        const { userLogin: { userInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        };\r\n\r\n        const { data } = await axios.put(`/api/users/profile`, user, config);\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        });\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        });\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n};\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST\r\n        });\r\n\r\n        const { userLogin: { userInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        };\r\n\r\n        const { data } = await axios.get(`/api/users`, config);\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        });\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n};\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST\r\n        });\r\n\r\n        const { userLogin: { userInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        };\r\n\r\n        await axios.delete(`/api/users/${id}`, config);\r\n\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS,\r\n        });\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n};\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST\r\n        });\r\n\r\n        const { userLogin: { userInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        };\r\n\r\n        const { data } = await axios.put(`/api/users/${user._id}`, user, config);\r\n\r\n        dispatch({ type: USER_UPDATE_SUCCESS });\r\n\r\n        dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n};","import React, { useState } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nconst SearchBox = ({ history }) => {\r\n    const [keyword, setKeyword] = useState('');\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if (keyword.trim()) {\r\n            history.push(`/search/${keyword}`);\r\n        } else {\r\n            history.push('/');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Form onSubmit={submitHandler} className='d-flex mt-2' >\r\n                <Form.Control\r\n                \r\n                    type='text'\r\n                    name='q'\r\n                    onChange={(e) => setKeyword(e.target.value)}\r\n                    placeholder='Search Products...'\r\n                    className='me-sm-2 ml-sm-5'\r\n                /><Button type='submit' variant='outline-success' className='p-2' >\r\n                    Search\r\n                </Button>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default SearchBox;","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap';\r\nimport { logout } from '../actions/userActions';\r\nimport SearchBox from './SearchBox';\r\n\r\nconst Header = () => {\r\n    const dispatch = useDispatch();\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n    };\r\n\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" variant='dark' expand=\"lg\" collapseOnSelect>\r\n                <Container>\r\n                    <LinkContainer to='/'>\r\n                        <Navbar.Brand>ProShop</Navbar.Brand>\r\n                    </LinkContainer>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Route render={({ history }) => <SearchBox history={history} />} />\r\n                        <Nav className=\"ms-auto\">\r\n                            <LinkContainer to='/cart'>\r\n                                <Nav.Link >\r\n                                    <i className='fas fa-shopping-cart'></i> Cart\r\n                                </Nav.Link>\r\n                            </LinkContainer>\r\n                            {userInfo ? (\r\n                                <NavDropdown title={userInfo.name} id='username'>\r\n                                    <LinkContainer to='/profile'>\r\n                                        <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n                                </NavDropdown>\r\n                            ) : (\r\n                                <LinkContainer to='/login'>\r\n                                    <Nav.Link >\r\n                                        <i className='fas fa-user'></i> Sign In\r\n                                    </Nav.Link>\r\n                                </LinkContainer>)}\r\n                            {userInfo && userInfo.isAdmin && (\r\n                                <NavDropdown title='Admin' id='adminmenu'>\r\n                                    <LinkContainer to='/admin/userlist'>\r\n                                        <NavDropdown.Item>Users</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <LinkContainer to='/admin/productlist'>\r\n                                        <NavDropdown.Item>Products</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <LinkContainer to='/admin/orderlist'>\r\n                                        <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                </NavDropdown>\r\n                            )}\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar >\r\n        </header >\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className=\"text-center py-3\">\r\n                        Copyright &copy; InvestmentShop\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    );\r\n};\r\nexport default Footer;\r\n","import React from 'react';\r\nimport propTypes from 'prop-types';\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n    return (\r\n        <div className='rating'>\r\n            <span>\r\n                <i style={{ color }} className={value >= 1 ? 'fas fa-star' : value >= 0.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n                <i style={{ color }} className={value >= 2 ? 'fas fa-star' : value >= 1.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n                <i style={{ color }} className={value >= 3 ? 'fas fa-star' : value >= 2.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n                <i style={{ color }} className={value >= 4 ? 'fas fa-star' : value >= 3.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n                <i style={{ color }} className={value >= 5 ? 'fas fa-star' : value >= 4.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n            </span>\r\n            <span>{text ? text : ''}</span>\r\n            {/* alternative syntax 'text && text' => meaning: if there is text then show it */}\r\n        </div>\r\n    );\r\n};\r\n\r\nRating.defaultProps = {\r\n    color: '#f8e825'\r\n};\r\n\r\nRating.propTypes = {\r\n    value: propTypes.number.isRequired,\r\n    text: propTypes.string.isRequired,\r\n    color: propTypes.string,\r\n}\r\n\r\nexport default Rating;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card } from 'react-bootstrap';\r\nimport Rating from './Rating';\r\n\r\nconst Product = ({ product }) => {\r\n    return (\r\n        <Card className='my-3 p-3 rounded'>\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image} variant='top' />\r\n            </Link>\r\n\r\n            <Card.Body>\r\n                <Link to={`/product/${product._id}`}>\r\n                    <Card.Title as='div' >\r\n                        <strong>{product.name}</strong>\r\n                    </Card.Title>\r\n                </Link>\r\n\r\n                <Card.Text as='div'>\r\n                    <Rating value={product.rating} text={`${product.numReviews} reviews`} />\r\n                </Card.Text>\r\n\r\n                <Card.Text as='h3'>${product.price}</Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default Product;\r\n","import React from 'react';\r\nimport { Alert } from 'react-bootstrap';\r\n\r\nconst Message = ({ variant, children }) => {\r\n    // children props here can be put inside the component when it is called from somewhere else=> <Message>{children}</Message>\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    );\r\n};\r\n\r\nMessage.defaultProps = {\r\n    variant: 'info'\r\n};\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <Spinner animation='border' role='status' style={{ width: '100px', height: '100px', margin: 'auto', display: 'block' }}>\r\n            <span className='sr-only'>Loading...</span>\r\n        </Spinner>\r\n    );\r\n};\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\nimport { Pagination } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nconst Paginate = ({ pages, page, isAdmin = false, keyword = '' }) => {\r\n    return pages > 1 && (\r\n        <Pagination>\r\n            {[...Array(pages).keys()].map(x => (\r\n                <LinkContainer key={x + 1} to={!isAdmin ? keyword ? `/search/${keyword}/page/${x + 1}` : `/page/${x + 1}` : `/admin/productlist/${x + 1}`}>\r\n                    <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n    );\r\n};\r\n\r\nexport default Paginate;\r\n","import { PRODUCT_LIST_REQUEST, PRODUCT_LIST_FAIL, PRODUCT_LIST_SUCCESS, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAIL, PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_SUCCESS, PRODUCT_CREATE_FAIL, PRODUCT_UPDATE_SUCCESS, PRODUCT_UPDATE_FAIL, PRODUCT_UPDATE_REQUEST, PRODUCT_CREATE_REVIEW_REQUEST, PRODUCT_CREATE_REVIEW_SUCCESS, PRODUCT_CREATE_REVIEW_FAIL, PRODUCT_TOP_REQUEST, PRODUCT_TOP_SUCCESS, PRODUCT_TOP_FAIL } from \"../constants/productConstants\";\r\nimport axios from 'axios';\r\n\r\nexport const listProducts = (keyword = '', pageNumber = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST });\r\n\r\n        const { data } = await axios.get(`/api/products?keyword=${keyword}&pageNumber=${pageNumber}`);\r\n\r\n        dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({ type: PRODUCT_LIST_FAIL, payload: error.response && error.response.data.message ? error.response.data.message : error.message });\r\n    }\r\n};\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST });\r\n\r\n        const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n        dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({ type: PRODUCT_DETAILS_FAIL, payload: error.response && error.response.data.message ? error.response.data.message : error.message });\r\n    }\r\n};\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST\r\n        });\r\n\r\n        const { userLogin: { userInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        };\r\n\r\n        await axios.delete(`/api/products/${id}`, config);\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS,\r\n        });\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n};\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST\r\n        });\r\n\r\n        const { userLogin: { userInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        };\r\n\r\n        const { data } = await axios.post(`/api/products`, {}, config);\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data\r\n        });\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n};\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST\r\n        });\r\n\r\n        const { userLogin: { userInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        };\r\n\r\n        const { data } = await axios.put(`/api/products/${product._id}`, product, config);\r\n\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data\r\n        });\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n};\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST\r\n        });\r\n\r\n        const { userLogin: { userInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        };\r\n\r\n        await axios.post(`/api/products/${productId}/reviews`, review, config);\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS\r\n        });\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n};\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_TOP_REQUEST });\r\n\r\n        const { data } = await axios.get(`/api/products/top`);\r\n\r\n        dispatch({ type: PRODUCT_TOP_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({ type: PRODUCT_TOP_FAIL, payload: error.response && error.response.data.message ? error.response.data.message : error.message });\r\n    }\r\n};","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Carousel, Image } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loader from './Loader';\r\nimport Message from './Message';\r\nimport { listTopProducts } from '../actions/productActions';\r\n\r\nconst ProductCarousel = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const productTopRated = useSelector(state => state.productTopRated);\r\n    const { loading, error, products } = productTopRated;\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopProducts());\r\n    }, [dispatch]);\r\n\r\n    return loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n        <Carousel pause='hover' className='bg-dark'>\r\n            {products.map(product => (\r\n                <Carousel.Item key={product._id}>\r\n                    <Link to={`/product/${product._id}`}>\r\n                        <Image src={product.image} alt={product.name} fluid />\r\n                        <Carousel.Caption className='carousel-caption'>\r\n                            <h2>{product.name} (${product.price})</h2>\r\n                        </Carousel.Caption>\r\n                    </Link>\r\n                </Carousel.Item>\r\n            ))}\r\n        </Carousel>\r\n    );\r\n};\r\n\r\nexport default ProductCarousel;\r\n","import React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nconst Meta = ({ title, description, keywords }) => {\r\n    return (\r\n        <Helmet>\r\n            <title>{title}</title>\r\n            <meta name='description' content={description} />\r\n            <meta name='keywords' content={keywords} />\r\n        </Helmet>\r\n    );\r\n};\r\n\r\nMeta.defaultProps = {\r\n    title: 'Welcome To InvestmentShop',\r\n    keyword: 'electronics, buy electronics, cheap electronics',\r\n    description: 'We connect you to the best investments'\r\n};\r\n\r\nexport default Meta;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport Product from '../components/Product';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport Paginate from '../components/Paginate';\r\nimport ProductCarousel from '../components/ProductCarousel';\r\nimport Meta from '../components/Meta';\r\nimport { listProducts } from '../actions/productActions';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst HomeScreen = ({ match }) => {\r\n    const keyword = match.params.keyword;\r\n\r\n    const pageNumber = match.params.pageNumber || 1;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    // grab the info from our universal state by using useSelector\r\n    const productList = useSelector(state => state.productList);\r\n    const { loading, error, products, pages, page } = productList;\r\n\r\n    useEffect(() => {\r\n        // issue a command to get the product from our server\r\n        dispatch(listProducts(keyword, pageNumber));\r\n    }, [dispatch, keyword, pageNumber]);\r\n\r\n    return (\r\n        <>\r\n            <Meta />\r\n            {!keyword ? <ProductCarousel /> : <Link to='/' className='btn btn-light'>Go Back</Link>}\r\n            <h1>Latest Products</h1>\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> :\r\n                <>\r\n                    <Row>\r\n                        {products.map(product => (\r\n                            <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                                <Product product={product} />\r\n                            </Col>\r\n                        ))}\r\n                    </Row>\r\n                    <Paginate pages={pages} page={page} keyword={keyword ? keyword : ''} />\r\n                </>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default HomeScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap';\r\nimport Rating from '../components/Rating';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport Meta from '../components/Meta';\r\nimport { listProductDetails, createProductReview } from '../actions/productActions';\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants';\r\n\r\n// match here is in props => so match is essentially props.match\r\nconst ProductScreen = ({ history, match }) => {\r\n    const [qty, setQty] = useState(1);\r\n    const [rating, setRating] = useState(0);\r\n    const [comment, setComment] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const productDetails = useSelector(state => state.productDetails);\r\n    const { loading, error, product } = productDetails;\r\n\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    const productReviewCreate = useSelector(state => state.productReviewCreate);\r\n    const { error: errorProductReview, success: successProductReview } = productReviewCreate;\r\n\r\n    useEffect(() => {\r\n        if (successProductReview) {\r\n            alert('Review Submitted!');\r\n            setRating(0);\r\n            setComment('');\r\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET });\r\n        }\r\n        dispatch(listProductDetails(match.params.id));\r\n    }, [dispatch, match, successProductReview]);\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`);\r\n    };\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(createProductReview(match.params.id, {\r\n            rating, comment\r\n        }));\r\n    };\r\n\r\n\r\n    // && here can be used => true && express => evaluate to expresssion; false && expression => evaluate to false\r\n    // so can be used in a sense that if it is true then express the expression\r\n    //[...Array(product.countInStock).keys()] => if countInStock = 5 => produce an array [0, 1, 2, 3, 4 ]\r\n    return (\r\n        <>\r\n            <Link className='btn btn-light my-3' to='/'>Go Back</Link>\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n                <>\r\n                    <Meta title={product.name} />\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <Image src={product.image} alt={product.name} fluid />\r\n                        </Col>\r\n                        <Col md={3}>\r\n                            <ListGroup variant='flush'>\r\n                                <ListGroup.Item>\r\n                                    <h2>{product.name}</h2>\r\n                                </ListGroup.Item>\r\n                            </ListGroup>\r\n                            <ListGroup.Item>\r\n                                <Rating value={product.rating} text={`${product.numReviews} reviews`} />\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                Price: ${product.price}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                Description: {product.description}\r\n                            </ListGroup.Item>\r\n                        </Col>\r\n                        <Col md={3}>\r\n                            <Card>\r\n                                <ListGroup variant='flush'>\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>\r\n                                                Price:\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <strong>${product.price}</strong>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>\r\n                                                Status:\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <strong>{product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}</strong>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    {product.countInStock > 0 && (\r\n                                        <ListGroup.Item>\r\n                                            <Row>\r\n                                                <Col>Qty</Col>\r\n                                                <Col>\r\n                                                    <Form.Control as='select' value={qty} onChange={(e) => setQty(e.target.value)}>\r\n                                                        {[...Array(product.countInStock).keys()].map(x => (\r\n                                                            <option key={x + 1} value={x + 1}>\r\n                                                                {x + 1}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Form.Control>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    )}\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Button onClick={addToCartHandler} className='btn col-12' type='button' disabled={product.countInStock === 0}>\r\n                                            Add To Cart\r\n                                        </Button>\r\n                                    </ListGroup.Item>\r\n                                </ListGroup>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <h2>Reviews</h2>\r\n                            {product.reviews.length === 0 && <Message>No Reviews</Message>}\r\n                            <ListGroup variant='flush'>\r\n                                {product.reviews.map(review => (\r\n                                    <ListGroup.Item key={review._id}>\r\n                                        <strong>{review.name}</strong>\r\n                                        <Rating value={review.rating} />\r\n                                        <p>{review.createdAt.substring(0, 10)}</p>\r\n                                        <p>{review.comment}</p>\r\n                                    </ListGroup.Item>\r\n                                ))}\r\n                                <ListGroup.Item>\r\n                                    <h2>Write a Customer Review</h2>\r\n                                    {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\r\n                                    {userInfo ? (\r\n                                        <Form onSubmit={submitHandler}>\r\n                                            <Form.Group controlId='rating'>\r\n                                                <Form.Label>Rating</Form.Label>\r\n                                                <Form.Control as='select' value={rating} onChange={(e) => setRating(e.target.value)} >\r\n                                                    <option value=''>Select...</option>\r\n                                                    <option value='1'>1 - Poor</option>\r\n                                                    <option value='2'>2 - Fair</option>\r\n                                                    <option value='3'>3 - Good</option>\r\n                                                    <option value='4'>4 - Very Good</option>\r\n                                                    <option value='5'>5 - Excellent</option>\r\n                                                </Form.Control>\r\n                                            </Form.Group>\r\n                                            <Form.Group controlId='comment'>\r\n                                                <Form.Label>Comment</Form.Label>\r\n                                                <Form.Control as='textarea' row='3' value={comment} onChange={(e) => setComment(e.target.value)}></Form.Control>\r\n                                            </Form.Group>\r\n                                            <Button type='submit' variant='primary'>\r\n                                                Submit\r\n                                            </Button>\r\n                                        </Form>\r\n                                    ) : <Message>Please <Link to='/login'>sign in</Link> to write a review</Message>}\r\n                                </ListGroup.Item>\r\n                            </ListGroup>\r\n                        </Col>\r\n                    </Row>\r\n                </>\r\n            )}\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ProductScreen;\r\n","import axios from 'axios';\r\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_PAYMENT_METHOD, CART_SAVE_SHIPPING_ADDRESS } from '../constants/cartConstants';\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty\r\n        }\r\n    });\r\n\r\n    // store the cartItems into localStorage\r\n    // so even if you reload the website the web browser still have info on those cart items\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const removeFromCart = (id) => async (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id\r\n    });\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const saveShippingAddress = (data) => async (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data\r\n    });\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data));\r\n};\r\n\r\nexport const savePaymentMethod = (data) => async (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data\r\n    });\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data));\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap';\r\nimport Message from '../components/Message';\r\nimport { addToCart, removeFromCart } from '../actions/cartActions';\r\n\r\n// history for redirect, location is for getting the ?qty in param\r\nconst CartScreen = ({ match, location, history }) => {\r\n    const productId = match.params.id;\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const cart = useSelector(state => state.cart);\r\n    const { cartItems } = cart;\r\n\r\n    useEffect(() => {\r\n        if (productId) {\r\n            dispatch(addToCart(productId, qty));\r\n        }\r\n    }, [dispatch, productId, qty]);\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id));\r\n    };\r\n\r\n    const checkoutHandler = () => {\r\n        // if login go to shipping, if not go to login\r\n        history.push('/login?redirect=shipping');\r\n    };\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                {cartItems.length === 0 ? <Message>Your cart is empty <Link to='/'>Go Back</Link></Message> : (\r\n                    <ListGroup variant='flush'>\r\n                        {cartItems.map((item) => (\r\n                            <ListGroup.Item key={item.product}>\r\n                                <Row>\r\n                                    <Col md={2}>\r\n                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                    </Col>\r\n                                    <Col md={2}>${item.price}</Col>\r\n                                    <Col md={2}>\r\n                                        <Form.Control as='select' value={item.qty} onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}>\r\n                                            {[...Array(item.countInStock).keys()].map(x => (\r\n                                                <option key={x + 1} value={x + 1}>\r\n                                                    {x + 1}\r\n                                                </option>\r\n                                            ))}\r\n                                        </Form.Control>\r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        <Button type='button' variant='light' onClick={() => removeFromCartHandler(item.product)}>\r\n                                            <i className='fas fa-trash'></i>\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                    </ListGroup>\r\n                )}\r\n            </Col>\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\r\n                            ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Button type='button' className='btn col-12' disabled={cartItems.length === 0} onClick={checkoutHandler}>\r\n                                Proceed To Checkout\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default CartScreen;\r\n","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst FormContainer = ({ children }) => {\r\n    return (\r\n        <Container>\r\n            <Row className='justify-content-md-center'>\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default FormContainer;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { login } from '../actions/userActions';\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const { loading, error, userInfo } = userLogin;\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/';\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect);\r\n        }\r\n    }, [history, userInfo, redirect]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(login(email, password));\r\n    };\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control type='email' placeholder='Enter email' value={email} onChange={(e) => setEmail(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type='password' placeholder='Enter password' value={password} onChange={(e) => setPassword(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Sign In\r\n                </Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    New Customer? <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>Register</Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    );\r\n};\r\n\r\nexport default LoginScreen;;","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { register } from '../actions/userActions';\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [message, setMessage] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userRegister = useSelector(state => state.userRegister);\r\n    const { loading, error, userInfo } = userRegister;\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/';\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect);\r\n        }\r\n    }, [history, userInfo, redirect]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if (password !== confirmPassword) {\r\n            setMessage('Password do not match');\r\n        } else {\r\n            dispatch(register(name, email, password));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign Up</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control type='name' placeholder='Enter name' value={name} onChange={(e) => setName(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control type='email' placeholder='Enter email' value={email} onChange={(e) => setEmail(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type='password' placeholder='Enter password' value={password} onChange={(e) => setPassword(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control type='password' placeholder='Confirm password' value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>\r\n                    Register\r\n                </Button>\r\n            </Form>\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Have an Account? {' '} <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>Login</Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    );\r\n};\r\n\r\nexport default RegisterScreen;;","import React, { useState, useEffect } from 'react';\r\nimport { Table, Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions';\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userContants';\r\nimport { listMyOrders } from '../actions/orderActions';\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [message, setMessage] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userDetails = useSelector(state => state.userDetails);\r\n    const { loading, error, user } = userDetails;\r\n\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile);\r\n    const { success } = userUpdateProfile;\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy);\r\n    // rename syntax loading:loadingOrders => rename loading to loadingOrders\r\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy;\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login');\r\n        } else {\r\n            if (!user || !user.name || success) {\r\n                dispatch({ type: USER_UPDATE_PROFILE_RESET });\r\n                dispatch(getUserDetails('profile'));\r\n                dispatch(listMyOrders());\r\n            } else {\r\n                setName(user.name);\r\n                setEmail(user.email);\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user, success]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if (password !== confirmPassword) {\r\n            setMessage('Password do not match');\r\n        } else {\r\n            dispatch(updateUserProfile({ id: user._id, name, email, password }));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>User Profile</h2>\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {success && <Message variant='success'>Profile Updated</Message>}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control type='name' placeholder='Enter name' value={name} onChange={(e) => setName(e.target.value)}></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control type='email' placeholder='Enter email' value={email} onChange={(e) => setEmail(e.target.value)}></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control type='password' placeholder='Enter password' value={password} autoComplete='on' onChange={(e) => setPassword(e.target.value)}></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='confirmPassword'>\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control type='password' placeholder='Confirm password' value={confirmPassword} autoComplete='on' onChange={(e) => setConfirmPassword(e.target.value)}></Form.Control>\r\n                    </Form.Group>\r\n                    <Button type='submit' variant='primary'>\r\n                        Update\r\n                    </Button>\r\n                </Form>\r\n            </Col>\r\n            <Col md={9}>\r\n                <h2>My Orders</h2>\r\n                {loadingOrders ? <Loader /> : errorOrders ? <Message variant='danger'>{errorOrders}</Message> : (\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>DATE</th>\r\n                                <th>TOTAL</th>\r\n                                <th>PAID</th>\r\n                                <th>DELIVERED</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {orders.map(order => (\r\n                                <tr key={order._id}>\r\n                                    <td>{order._id}</td>\r\n                                    <td>{order.createdAt.substring(0, 10)}</td>\r\n                                    <td>{order.totalPrice}</td>\r\n                                    <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\r\n                                        <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                    )}</td>\r\n                                    <td>{order.isDelivered ? order.deliveredAt.substring(0, 10) : (\r\n                                        <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                    )}</td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/order/${order._id}`}>\r\n                                            <Button variant='light' className='btn-sm'>Details</Button>\r\n                                        </LinkContainer>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                )}\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default ProfileScreen;;","import { ORDER_CREATE_FAIL, ORDER_CREATE_SUCCESS, ORDER_CREATE_REQUEST, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAIL, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_LIST_MY_FAIL, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_LIST_FAIL, ORDER_DELIVER_REQUEST, ORDER_DELIVER_SUCCESS, ORDER_DELIVER_FAIL } from '../constants/orderConstants';\r\nimport axios from 'axios';\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        });\r\n\r\n        const { userLogin: { userInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        };\r\n\r\n        const { data } = await axios.post(`/api/orders`, order, config);\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        });\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n};\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        });\r\n\r\n        const { userLogin: { userInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        };\r\n\r\n        const { data } = await axios.get(`/api/orders/${id}`, config);\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        });\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n};\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        });\r\n\r\n        const { userLogin: { userInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        };\r\n\r\n        const { data } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config);\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        });\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n};\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST\r\n        });\r\n\r\n        const { userLogin: { userInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        };\r\n\r\n        const { data } = await axios.put(`/api/orders/${order._id}/deliver`, {}, config);\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data\r\n        });\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n};\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n        });\r\n\r\n        const { userLogin: { userInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        };\r\n\r\n        const { data } = await axios.get(`/api/orders/myorders`, config);\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        });\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n};\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST\r\n        });\r\n\r\n        const { userLogin: { userInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        };\r\n\r\n        const { data } = await axios.get(`/api/orders`, config);\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        });\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n};","import React from 'react';\r\nimport { Nav } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n    return (\r\n        <Nav className='justified-content-center mb-4'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>Sign In</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : <Nav.Link disabled>Sign In</Nav.Link>}\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : <Nav.Link disabled>Shipping</Nav.Link>}\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to='/payment'>\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : <Nav.Link disabled>Payment</Nav.Link>}\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step4? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : <Nav.Link disabled>Place Order</Nav.Link>}\r\n            </Nav.Item>\r\n        </Nav>\r\n    );\r\n};\r\n\r\nexport default CheckoutSteps;\r\n","import React, { useState } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { saveShippingAddress } from '../actions/cartActions';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n    const cart = useSelector(state => state.cart);\r\n    const { shippingAddress } = cart;\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address);\r\n    const [city, setCity] = useState(shippingAddress.city);\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\r\n    const [country, setCountry] = useState(shippingAddress.country);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country }));\r\n        history.push('/payment');\r\n    };\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 />\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler} >\r\n                <Form.Group controlId='address' className='py-2'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control type='address' placeholder='Enter address' value={address} required onChange={(e) => setAddress(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='city' className='py-2'>\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control type='city' placeholder='Enter city' value={city} required onChange={(e) => setCity(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postalCode' className='py-2'>\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control type='postalCode' placeholder='Enter postalCode' value={postalCode} required onChange={(e) => setPostalCode(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='country' className='py-2'>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control type='country' placeholder='Enter country' value={country} required onChange={(e) => setCountry(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary' className='my-2'>Continue</Button>\r\n            </Form>\r\n        </FormContainer>\r\n    );\r\n};\r\n\r\nexport default ShippingScreen;\r\n","import React, { useState } from 'react';\r\nimport { Form, Button, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { savePaymentMethod } from '../actions/cartActions';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n    const cart = useSelector(state => state.cart);\r\n    const { shippingAddress } = cart;\r\n\r\n    if (!shippingAddress) {\r\n        history.push('/shipping');\r\n    }\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal');\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(savePaymentMethod(paymentMethod));\r\n        history.push('/placeorder');\r\n    };\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3 />\r\n            <h1>Payment Method</h1>\r\n            <Form onSubmit={submitHandler} >\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Method</Form.Label>\r\n                    <Col>\r\n                        <Form.Check type='radio' label='PayPal or Credit Card' id='PayPal' name='paymentMethod' value='PayPal' checked onChange={(e) => setPaymentMethod(e.target.value)}></Form.Check>\r\n                        {/* <Form.Check type='radio' label='Stripe' id='Stripe' name='paymentMethod' value='Stripe' checked onChange={(e) => setPaymentMethod(e.target.value)}></Form.Check> */}\r\n                    </Col>\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary' className='my-2'>Continue</Button>\r\n            </Form>\r\n        </FormContainer>\r\n    );\r\n};\r\n\r\nexport default PaymentScreen;\r\n","import React, { useEffect } from 'react';\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\nimport { createOrder } from '../actions/orderActions';\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const cart = useSelector(state => state.cart);\r\n\r\n    const addDecimals = (num) => {\r\n        return (Math.round(num * 100) / 100).toFixed(2);\r\n    };\r\n\r\n    // calculate the prices\r\n    cart.itemsPrice = addDecimals(cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0));\r\n    cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 20);\r\n    cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice)));\r\n    cart.totalPrice = addDecimals(Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice));\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate);\r\n    const { order, success, error } = orderCreate;\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            history.push(`/order/${order._id}`);\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [history, success]);\r\n\r\n    const placeOrderHandler = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>Address:</strong>\r\n                                {cart.shippingAddress.address}, {cart.shippingAddress.city} {cart.shippingAddress.postalCode}, {' '} {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <strong>Method: </strong>\r\n                            {cart.paymentMethod}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {cart.cartItems.length === 0 ? (<Message>Your cart is empty</Message>) : (\r\n                                <ListGroup variant='flush'>\r\n                                    {cart.cartItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image\r\n                                                        src={item.image}\r\n                                                        alt={item.name}\r\n                                                        fluid\r\n                                                        rounded\r\n                                                    />\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>\r\n                                                        {item.name}\r\n                                                    </Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>${cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax</Col>\r\n                                    <Col>${cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                {error && <Message variant='danger'>{error}</Message>}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Button type='button' className='btn col-12' disabled={cart.cartItems === 0} onClick={placeOrderHandler}>Place Order</Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PlaceOrderScreen;\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { PayPalButton } from 'react-paypal-button-v2';\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions';\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants';\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n    const orderId = match.params.id;\r\n\r\n    const [sdkReady, setSdkReady] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails);\r\n    const { order, loading, error } = orderDetails;\r\n\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    const orderPay = useSelector(state => state.orderPay);\r\n    // rename syntax\r\n    const { loading: loadingPay, success: successPay } = orderPay;\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver);\r\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver;\r\n\r\n    if (!loading) {\r\n        const addDecimals = (num) => {\r\n            return (Math.round(num * 100) / 100).toFixed(2);\r\n        };\r\n        order.itemsPrice = addDecimals(order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login');\r\n        }\r\n\r\n        const addPayPalScript = async () => {\r\n            const { data: clientId } = await axios.get('/api/config/paypal');\r\n            const script = document.createElement('script');\r\n            script.type = 'text/javascript';\r\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\r\n            script.async = true;\r\n            script.onload = () => {\r\n                setSdkReady(true);\r\n            };\r\n            document.body.appendChild(script);\r\n        };\r\n\r\n        if (!order || order._id !== orderId || successPay || successDeliver) {\r\n            dispatch({ type: ORDER_PAY_RESET });\r\n            dispatch({ type: ORDER_DELIVER_RESET });\r\n            dispatch(getOrderDetails(orderId));\r\n        } else if (!order.isPaid) {\r\n            if (!window.paypal) {\r\n                addPayPalScript();\r\n            } else {\r\n                setSdkReady(true);\r\n            }\r\n        }\r\n    }, [order, orderId, dispatch, successPay, successDeliver, history, userInfo]);\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        console.log(paymentResult);\r\n        dispatch(payOrder(orderId, paymentResult));\r\n    };\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order));\r\n    };\r\n\r\n    return loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : <>\r\n        <h1>Order {order._id}</h1>\r\n        <Row>\r\n            <Col md={8}>\r\n                <ListGroup variant='flush'>\r\n                    <ListGroup.Item>\r\n                        <h2>Shipping</h2>\r\n                        <p>\r\n                            <strong>Name: </strong> {order.user.name}\r\n                        </p>\r\n                        <p>\r\n                            <strong>Email: </strong> {' '}\r\n                            <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n                        </p>\r\n                        <p>\r\n                            <strong>Address:</strong>\r\n                            {order.shippingAddress.address}, {order.shippingAddress.city} {order.shippingAddress.postalCode}, {' '} {order.shippingAddress.country}\r\n                        </p>\r\n                        {order.isDelivered ? <Message variant='success'>Delivered on {order.deliveredAt}</Message> : <Message variant='danger'>Not Delivered</Message>}\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <h2>Payment Method</h2>\r\n                        <p>\r\n                            <strong>Method: </strong>\r\n                            {order.paymentMethod}\r\n                        </p>\r\n                        {order.isPaid ? <Message variant='success'>Paid on {order.paidAt}</Message> : <Message variant='danger'>Not Paid</Message>}\r\n                    </ListGroup.Item>\r\n\r\n                    <ListGroup.Item>\r\n                        <h2>Order Items</h2>\r\n                        {order.orderItems.length === 0 ? (<Message>Your order is empty</Message>) : (\r\n                            <ListGroup variant='flush'>\r\n                                {order.orderItems.map((item, index) => (\r\n                                    <ListGroup.Item key={index}>\r\n                                        <Row>\r\n                                            <Col md={1}>\r\n                                                <Image\r\n                                                    src={item.image}\r\n                                                    alt={item.name}\r\n                                                    fluid\r\n                                                    rounded\r\n                                                />\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <Link to={`/product/${item.product}`}>\r\n                                                    {item.name}\r\n                                                </Link>\r\n                                            </Col>\r\n                                            <Col md={4}>\r\n                                                {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n                                ))}\r\n                            </ListGroup>\r\n                        )}\r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n            </Col>\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Order Summary</h2>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Items</Col>\r\n                                <Col>${order.itemsPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Shipping</Col>\r\n                                <Col>${order.shippingPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Tax</Col>\r\n                                <Col>${order.taxPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Total</Col>\r\n                                <Col>${order.totalPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        {!order.isPaid && (\r\n                            <ListGroup.Item>\r\n                                {loadingPay && <Loader />}\r\n                                {!sdkReady ? <Loader /> : (\r\n                                    <PayPalButton amount={order.totalPrice} onSuccess={successPaymentHandler} />\r\n                                )}\r\n                            </ListGroup.Item>\r\n                        )}\r\n                        {loadingDeliver && <Loader />}\r\n                        {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                            <ListGroup.Item>\r\n                                <Button type='button' className='btn col-12' onClick={deliverHandler}>\r\n                                    Mark As Delivered\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        )}\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    </>;\r\n};\r\n\r\nexport default OrderScreen;\r\n","import React, { useEffect } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { listUsers, deleteUser } from '../actions/userActions';\r\n\r\nconst UserListScreen = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const userList = useSelector(state => state.userList);\r\n    const { loading, error, users } = userList;\r\n\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    const userDelete = useSelector(state => state.userDelete);\r\n    const { success: successDelete } = userDelete;\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listUsers());\r\n        } else {\r\n            history.push('/login');\r\n        }\r\n    }, [dispatch, history, successDelete, userInfo]);\r\n\r\n    const deleteHandler = (id) => {\r\n        if (window.confirm('Are you sure?')) {\r\n            dispatch(deleteUser(id));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h1>Users</h1>\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n                <Table striped bordered hover responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>NAME</th>\r\n                            <th>EMAIL</th>\r\n                            <th>ADMIN</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n                        {users.map(user => (\r\n                            <tr key={user._id}>\r\n                                <td>{user._id}</td>\r\n                                <td>{user.name}</td>\r\n                                <td><a href={`mailto:${user.email}`}>{user.email}</a></td>\r\n                                <td>{user.isAdmin ? (<i className='fas fa-check' style={{ color: 'green' }}></i>) : (\r\n                                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                )}\r\n                                </td>\r\n                                <td>\r\n                                    <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                        <Button variant='light' className='btn-sm'>\r\n                                            <i className='fas fa-edit'></i>\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                    <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\r\n                                        <i className='fas fa-trash'></i>\r\n                                    </Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserListScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { getUserDetails, updateUser } from '../actions/userActions';\r\nimport { USER_UPDATE_RESET } from '../constants/userContants';\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n    const userId = match.params.id;\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userDetails = useSelector(state => state.userDetails);\r\n    const { loading, error, user } = userDetails;\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate);\r\n    const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = userUpdate;\r\n\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            dispatch({ type: USER_UPDATE_RESET });\r\n            history.push('/admin/userlist');\r\n        } else {\r\n            if (!user.name || user._id !== userId) {\r\n                dispatch(getUserDetails(userId));\r\n            } else {\r\n                setName(user.name);\r\n                setEmail(user.email);\r\n                setIsAdmin(user.isAdmin);\r\n            }\r\n        }\r\n    }, [user, dispatch, userId, successUpdate, history]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(updateUser({ _id: userId, name, email, isAdmin }));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Link to='/admin/userlist' className='btn btn-light my-3'>\r\n                Go Back\r\n            </Link>\r\n            <FormContainer>\r\n                <h1>Edit User</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n                    <Form onSubmit={submitHandler}>\r\n                        <Form.Group controlId='name'>\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control type='name' placeholder='Enter name' value={name} onChange={(e) => setName(e.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId='email'>\r\n                            <Form.Label>Email Address</Form.Label>\r\n                            <Form.Control type='email' placeholder='Enter email' value={email} onChange={(e) => setEmail(e.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId='isadmin'>\r\n                            <Form.Check type='checkbox' label='Is Admin' checked={isAdmin} onChange={(e) => setIsAdmin(e.target.checked)}></Form.Check>\r\n                        </Form.Group>\r\n\r\n                        <Button type='submit' variant='primary'>\r\n                            Update\r\n                        </Button>\r\n                    </Form>\r\n                )}\r\n            </FormContainer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserEditScreen;","import React, { useEffect } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport Paginate from '../components/Paginate';\r\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions';\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants';\r\n\r\nconst ProductListScreen = ({ history, match }) => {\r\n    const pageNumber = match.params.pageNumber || 1;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const productList = useSelector(state => state.productList);\r\n    const { loading, error, products, pages, page } = productList;\r\n\r\n    const productDelete = useSelector(state => state.productDelete);\r\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete;\r\n\r\n    const productCreate = useSelector(state => state.productCreate);\r\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate;\r\n\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: PRODUCT_CREATE_RESET });\r\n\r\n        if (!userInfo.isAdmin) {\r\n            history.push('/login');\r\n        }\r\n\r\n        if (successCreate) {\r\n            history.push(`/admin/product/${createdProduct._id}/edit`);\r\n        } else {\r\n            dispatch(listProducts('', pageNumber));\r\n        }\r\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, pageNumber]);\r\n\r\n    const deleteHandler = (id) => {\r\n        if (window.confirm('Are you sure?')) {\r\n            dispatch(deleteProduct(id));\r\n        }\r\n    };\r\n\r\n    const createProductHandler = () => {\r\n        dispatch(createProduct());\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Row className='align-items-center'>\r\n                <Col>\r\n                    <h1>Products</h1>\r\n                </Col>\r\n                <Col className='text-end'>\r\n                    <Button className='my-3' onClick={createProductHandler}>\r\n                        <i className='fas fa-plus'></i> Create Product\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            {loadingDelete && <Loader />}\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n            {loadingCreate && <Loader />}\r\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n                <>\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>NAME</th>\r\n                                <th>PRICE</th>\r\n                                <th>CATEGORY</th>\r\n                                <th>BRAND</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                            {products.map(product => (\r\n                                <tr key={product._id}>\r\n                                    <td>{product._id}</td>\r\n                                    <td>{product.name}</td>\r\n                                    <td>${product.price}</td>\r\n                                    <td>{product.category}</td>\r\n                                    <td>{product.brand}</td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                                            <Button variant='light' className='btn-sm'>\r\n                                                <i className='fas fa-edit'></i>\r\n                                            </Button>\r\n                                        </LinkContainer>\r\n                                        <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\r\n                                            <i className='fas fa-trash'></i>\r\n                                        </Button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                    <Paginate pages={pages} page={page} isAdmin={true} />\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ProductListScreen;\r\n","import axios from 'axios';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { listProductDetails, updateProduct } from '../actions/productActions';\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants';\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n    const productId = match.params.id;\r\n\r\n    const [name, setName] = useState('');\r\n    const [price, setPrice] = useState(0);\r\n    const [image, setImage] = useState('');\r\n    const [brand, setBrand] = useState('');\r\n    const [category, setCategory] = useState('');\r\n    const [countInStock, setCountInStock] = useState(0);\r\n    const [description, setDescription] = useState('');\r\n    const [uploading, setUploading] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const productDetails = useSelector((state) => state.productDetails);\r\n    const { loading, error, product } = productDetails;\r\n\r\n    const productUpdate = useSelector((state) => state.productUpdate);\r\n    const {\r\n        loading: loadingUpdate,\r\n        error: errorUpdate,\r\n        success: successUpdate,\r\n    } = productUpdate;\r\n\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            dispatch({ type: PRODUCT_UPDATE_RESET });\r\n            history.push('/admin/productlist');\r\n        } else {\r\n            if (!product.name || product._id !== productId) {\r\n                dispatch(listProductDetails(productId));\r\n            } else {\r\n                setName(product.name);\r\n                setPrice(product.price);\r\n                setImage(product.image);\r\n                setBrand(product.brand);\r\n                setCategory(product.category);\r\n                setCountInStock(product.countInStock);\r\n                setDescription(product.description);\r\n            }\r\n        }\r\n    }, [dispatch, history, productId, product, successUpdate]);\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0];\r\n        const formData = new FormData();\r\n        formData.append('image', file);\r\n        setUploading(true);\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                },\r\n            };\r\n\r\n            const { data } = await axios.post('/api/upload', formData, config);\r\n\r\n            setImage(data);\r\n            setUploading(false);\r\n        } catch (error) {\r\n            console.error(error);\r\n            setUploading(false);\r\n        }\r\n    };\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(\r\n            updateProduct({\r\n                _id: productId,\r\n                name,\r\n                price,\r\n                image,\r\n                brand,\r\n                category,\r\n                description,\r\n                countInStock,\r\n            })\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Link to='/admin/productlist' className='btn btn-light my-3'>\r\n                Go Back\r\n            </Link>\r\n            <FormContainer>\r\n                <h1>Edit Product</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n                {loading ? (\r\n                    <Loader />\r\n                ) : error ? (\r\n                    <Message variant='danger'>{error}</Message>\r\n                ) : (\r\n                    <Form onSubmit={submitHandler}>\r\n                        <Form.Group controlId='name'>\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control\r\n                                type='name'\r\n                                placeholder='Enter name'\r\n                                value={name}\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='price'>\r\n                            <Form.Label>Price</Form.Label>\r\n                            <Form.Control\r\n                                type='number'\r\n                                placeholder='Enter price'\r\n                                value={price}\r\n                                onChange={(e) => setPrice(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='image'>\r\n                            <Form.Label>Image</Form.Label>\r\n                            <Form.Control\r\n                                type='text'\r\n                                placeholder='Enter image url'\r\n                                value={image}\r\n                                onChange={(e) => setImage(e.target.value)}\r\n                            ></Form.Control>\r\n                            <Form.File\r\n                                id='image-file'\r\n                                label='Choose File'\r\n                                custom\r\n                                onChange={uploadFileHandler}\r\n                            ></Form.File>\r\n                            {uploading && <Loader />}\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='brand'>\r\n                            <Form.Label>Brand</Form.Label>\r\n                            <Form.Control\r\n                                type='text'\r\n                                placeholder='Enter brand'\r\n                                value={brand}\r\n                                onChange={(e) => setBrand(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='countInStock'>\r\n                            <Form.Label>Count In Stock</Form.Label>\r\n                            <Form.Control\r\n                                type='number'\r\n                                placeholder='Enter countInStock'\r\n                                value={countInStock}\r\n                                onChange={(e) => setCountInStock(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='category'>\r\n                            <Form.Label>Category</Form.Label>\r\n                            <Form.Control\r\n                                type='text'\r\n                                placeholder='Enter category'\r\n                                value={category}\r\n                                onChange={(e) => setCategory(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='description'>\r\n                            <Form.Label>Description</Form.Label>\r\n                            <Form.Control\r\n                                type='text'\r\n                                placeholder='Enter description'\r\n                                value={description}\r\n                                onChange={(e) => setDescription(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Button type='submit' variant='primary'>\r\n                            Update\r\n                        </Button>\r\n                    </Form>\r\n                )}\r\n            </FormContainer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ProductEditScreen;","import React, { useEffect } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { listOrders } from '../actions/orderActions';\r\n\r\nconst OrderListScreen = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const orderList = useSelector(state => state.orderList);\r\n    const { loading, error, orders } = orderList;\r\n\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listOrders());\r\n        } else {\r\n            history.push('/login');\r\n        }\r\n    }, [dispatch, history, userInfo]);\r\n\r\n    return (\r\n        <>\r\n            <h1>Orders</h1>\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n                <Table striped bordered hover responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>USER</th>\r\n                            <th>DATE</th>\r\n                            <th>TOTAL</th>\r\n                            <th>PAID</th>\r\n                            <th>DELIVERED</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n                        {orders.map((order) => (\r\n                            <tr key={order._id}>\r\n                                <td>{order._id}</td>\r\n                                <td>{order.user && order.user.name}</td>\r\n                                <td>{order.createdAt.substring(0, 10)}</td>\r\n                                <td>${order.totalPrice}</td>\r\n                                <td>{order.isPaid ? (order.paidAt.substring(0, 10)) : (\r\n                                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                )}\r\n                                </td>\r\n                                <td>{order.isDelivered ? (order.deliveredAt.substring(0, 10)) : (\r\n                                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                )}\r\n                                </td>\r\n                                <td>\r\n                                    <LinkContainer to={`/order/${order._id}`}>\r\n                                        <Button variant='light' className='btn-sm'>\r\n                                            Details\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default OrderListScreen;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Container } from 'react-bootstrap';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport HomeScreen from './screens/HomeScreen';\nimport ProductScreen from './screens/ProductScreen';\nimport CartScreen from './screens/CartScreen';\nimport LoginScreen from './screens/LoginScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport ShippingScreen from './screens/ShippingScreen';\nimport PaymentScreen from './screens/PaymentScreen';\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\nimport OrderScreen from './screens/OrderScreen';\nimport UserListScreen from './screens/UserListScreen';\nimport UserEditScreen from './screens/UserEditScreen';\nimport ProductListScreen from './screens/ProductListScreen';\nimport ProductEditScreen from './screens/ProductEditScreen';\nimport OrderListScreen from './screens/OrderListScreen';\n\n\n// :id? => the ? make it optional\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <main className='py-3'>\n        <Container >\n          <Route path='/order/:id' component={OrderScreen} />\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n          <Route path='/payment' component={PaymentScreen} />\n          <Route path='/shipping' component={ShippingScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/product/:id' component={ProductScreen} />\n          <Route path='/cart/:id?' component={CartScreen} />\n          <Route path='/admin/userlist' component={UserListScreen} />\n          <Route path='/admin/orderlist' component={OrderListScreen} />\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n          <Route path='/admin/productlist' component={ProductListScreen} exact />\n          <Route path='/admin/productlist/:pageNumber' component={ProductListScreen} exact />\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n          <Route path='/search/:keyword' component={HomeScreen} exact />\n          <Route path='/page/:pageNumber' component={HomeScreen} exact />\n          <Route path='/search/:keyword/page/:pageNumber' component={HomeScreen} exact />\n          <Route path='/' component={HomeScreen} exact />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\n// Provider is to link react with redux\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}